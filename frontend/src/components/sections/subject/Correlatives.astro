---
import ContainerSection from '@/components/common/ContainerSection.astro';
import { MATERIAS_SISTEMAS } from '@/data/materias';
interface Props {
  required: string[];
  correlatives: string[]; // IDs de las materias correlatives a la materia actual
  idMateria: string; // ID de la materia actual seleccionada
}

const { idMateria, correlatives, required } = Astro.props;

console.log(correlatives);
console.log(required);
// Constantes de configuración
const AÑOS_CARRERA = 5;
const CUATRIMESTRES_POR_AÑO = 2;

// Tipos de materias
const TIPOS_MATERIA = {
  CURSADA: 'cursada', // Materia que la seleccionada requiere para ser cursada
  CORRELATIVA: 'correlativa', // Materia que requiere de la seleccionada para ser cursada
  ACTUAL: 'actual', // La materia actualmente seleccionada
  DISPONIBLE: 'disponible', // Otras materias
};

// Obtener la carrera de Sistemas

/*
const ingenieriaSistemas = DATABASE.careers.find(
  (career) => career.id === 'ingenieria-en-sistemas'
);

if (!ingenieriaSistemas) {
  throw new Error('Carrera de Ingeniería en Sistemas no encontrada en la base de datos.');
}
*/
// Obtener la materia actual seleccionada
const materiaActual = MATERIAS_SISTEMAS.find((subject) => subject.id === idMateria);

if (!materiaActual) {
  throw new Error(`Materia con ID ${idMateria} no encontrada.`);
}

// Mapear el plan de estudios con los tipos de materia según los props
const PLAN_ESTUDIOS_MAPEADO: {
  [key: number]: {
    [key: number]: Array<{
      id: string;
      title: string;
      type: string;
      correlatives: string[]; // correlatives de la materia actual
      url: string;
      urlMoodle: string;
      urlPrograma: string;
      description: string;
    }>;
  };
} = {};

MATERIAS_SISTEMAS.forEach((subject) => {
  const year = subject.year;
  const quadmester = subject.quadmester;

  if (!PLAN_ESTUDIOS_MAPEADO[year]) {
    PLAN_ESTUDIOS_MAPEADO[year] = {};
  }
  if (!PLAN_ESTUDIOS_MAPEADO[year][quadmester]) {
    PLAN_ESTUDIOS_MAPEADO[year][quadmester] = [];
  }

  let type = TIPOS_MATERIA.DISPONIBLE;

  // Si es la materia actual
  if (subject.id === idMateria) {
    type = TIPOS_MATERIA.ACTUAL;
  }
  // Si la materia actual tiene esta materia como correlativa (es un requisito para la actual)
  else if (materiaActual.required.includes(subject.id)) {
    type = TIPOS_MATERIA.CURSADA;
  }
  // Si esta materia es una correlativa de la materia actual (la materia actual es requisito para esta)
  else if (correlatives.includes(subject.id)) {
    type = TIPOS_MATERIA.CORRELATIVA;
  }

  PLAN_ESTUDIOS_MAPEADO[year][quadmester].push({
    id: subject.id,
    title: subject.title,
    type: type,
    correlatives: subject.correlatives,
    url: subject.url,
    urlMoodle: subject.urlMoodle,
    urlPrograma: subject.urlPrograma,
    description: subject.description,
  });
});

// Función para obtener estilos según el tipo de materia
function getEstiloMateria(tipo: string) {
  switch (tipo) {
    case TIPOS_MATERIA.CURSADA:
      return {
        bg: 'bg-gradient-to-br from-orange-500/20 to-orange-600/10',
        border: 'border-orange-500/40',
        text: 'text-orange-200',
        dot: 'bg-orange-400',
      };
    case TIPOS_MATERIA.CORRELATIVA:
      return {
        bg: 'bg-gradient-to-br from-red-500/20 to-red-600/10',
        border: 'border-red-500/40',
        text: 'text-red-200',
        dot: 'bg-red-400',
      };
    case TIPOS_MATERIA.ACTUAL:
      return {
        bg: 'bg-gradient-to-br from-yellow-500/30 to-yellow-600/20',
        border: 'border-yellow-500/60',
        text: 'text-yellow-100',
        dot: 'bg-yellow-400',
      };
    default:
      return {
        bg: 'bg-gradient-to-br from-gray-800/50 to-gray-900/50',
        border: 'border-gray-700/50',
        text: 'text-gray-300',
        dot: 'bg-gray-500',
      };
  }
}
---

<ContainerSection id='correlatives' className=''>
  <div class='rounded-xl mt-10 lg:mt-20'>
    <div class='mb-12'>
      <h2 class='text-xl font-bold text-foreground mb-4'>Plan de Estudios - correlatives</h2>
      <p class='text-foreground-secondary mb-8'>
        Diagrama completo de la carrera mostrando las correlatives de <span
          class='text-yellow-400 font-semibold'>{materiaActual.title}</span
        >
      </p>

      <div class='flex flex-wrap gap-6 p-6 bg-gray-900/50 rounded-2xl border border-gray-800'>
        <div class='flex items-center gap-2'>
          <div
            class='w-4 h-4 bg-gradient-to-br from-orange-500/20 to-orange-600/10 border border-orange-500/40 rounded'
          >
          </div>
          <span class='text-gray-300 text-sm'>Requiere para cursar la materia seleccionada</span>
        </div>
        <div class='flex items-center gap-2'>
          <div
            class='w-4 h-4 bg-gradient-to-br from-red-500/20 to-red-600/10 border border-red-500/40 rounded'
          >
          </div>
          <span class='text-gray-300 text-sm'>La materia seleccionada es correlativa de esta</span>
        </div>
        <div class='flex items-center gap-2'>
          <div
            class='w-4 h-4 bg-gradient-to-br from-yellow-500/30 to-yellow-600/20 border border-yellow-500/60 rounded'
          >
          </div>
          <span class='text-gray-300 text-sm'>Materia seleccionada</span>
        </div>
        <div class='flex items-center gap-2'>
          <div
            class='w-4 h-4 bg-gradient-to-br from-gray-800/50 to-gray-900/50 border border-gray-700/50 rounded'
          >
          </div>
          <span class='text-gray-300 text-sm'>Otras materias</span>
        </div>
      </div>
    </div>

    <div class='space-y-12'>
      {
        Array.from({ length: AÑOS_CARRERA }, (_, añoIndex) => {
          const año = añoIndex + 1;
          return (
            <div class='space-y-6'>
              <div class='flex items-center gap-3'>
                <div class='bg-gradient-to-r from-primary/80 to-accent  text-primary-foreground px-4 py-2 rounded-xl font-bold text-lg shadow-lg'>
                  {año}° Año
                </div>
                <div class='h-px bg-gradient-to-r from-yellow-500/50 to-transparent flex-1' />
              </div>

              <div class='space-y-8'>
                {Array.from({ length: CUATRIMESTRES_POR_AÑO }, (_, cuatrimestreIndex) => {
                  const cuatrimestre = cuatrimestreIndex + 1;
                  const materias = PLAN_ESTUDIOS_MAPEADO[año]?.[cuatrimestre] || [];

                  return (
                    <div class='space-y-4'>
                      <h4 class='text-gray-400 font-semibold text-lg'>
                        {cuatrimestre}° Cuatrimestre
                      </h4>

                      <div class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4'>
                        {materias.map((materia) => {
                          const estilos = getEstiloMateria(materia.type);
                          return (
                            <div
                              class={`${estilos.bg} ${estilos.border} border-2 rounded-xl p-4 transition-all duration-300 hover:scale-105 hover:shadow-lg`}
                            >
                              <div class='flex items-start justify-between mb-3'>
                                <h5 class={`font-semibold ${estilos.text} leading-tight`}>
                                  {materia.title}
                                </h5>
                              </div>

                              {/* Indicador de materia actual */}
                              {materia.type === TIPOS_MATERIA.ACTUAL && (
                                <div class='mt-3 flex items-center gap-2'>
                                  <div class='w-2 h-2 bg-yellow-400 rounded-full animate-pulse' />
                                  <span class='text-xs font-semibold text-yellow-200'>
                                    Materia actual
                                  </span>
                                </div>
                              )}
                            </div>
                          );
                        })}
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          );
        })
      }
    </div>

    {/* Nota explicativa */}
    <div class='mt-12 p-6 bg-blue-900/20 border border-blue-500/30 rounded-2xl'>
      <p class='text-blue-200 text-sm leading-relaxed'>
        <span class='font-semibold text-blue-100'>Nota:</span> Este diagrama muestra el plan de estudios
        completo. Las materias marcadas en
        <span class='text-orange-300 font-medium'> naranja</span> son requisitos para cursar la materia
        seleccionada (<span class='text-yellow-400 font-semibold'>{materiaActual.title}</span>),
        mientras que las marcadas en
        <span class='text-red-300 font-medium'> rojo</span> requieren tener aprobada la materia seleccionada
        para ser cursadas.
      </p>
    </div>
  </div>
</ContainerSection>
